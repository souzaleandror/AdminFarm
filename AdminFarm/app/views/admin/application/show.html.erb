<%#
# Show

This view is the template for the show page.
It renders the attributes of a resource,
as well as a link to its edit page.

## Local variables:

- `page`:
  An instance of [Administrate::Page::Show][1].
  Contains methods for accessing the resource to be displayed on the page,
  as well as helpers for describing how each attribute of the resource
  should be displayed.

[1]: http://www.rubydoc.info/gems/administrate/Administrate/Page/Show
%>

<% content_for(:title) { "#{t("administrate.actions.show")} #{page.page_title}" } %>

<header class="main-content__header" role="banner">
  <h1 class="main-content__page-title">
    <%= content_for(:title) %>
  </h1>
  <div>
    <%= link_to( "#{t("administrate.actions.new")} #{t(page.resource_name.titleize.downcase)}", [:new, namespace, page.resource_path], class: "button new") if valid_action? :new %>
    <%= link_to( "#{t("administrate.actions.edit")} #{page.page_title}", [:edit, namespace, page.resource], class: "button edit") if valid_action? :edit %>
    <%= link_to( "#{t("administrate.actions.destroy")} #{page.page_title}", [namespace, page.resource], class: "button delete", method: :delete, data: { confirm: t("administrate.actions.confirm") }) %>
    <%= link_to t("administrate.actions.list"), [namespace, page.resource.class], class: "button"  %>
  </div>
</header>

<% if defined? page.show_page_actions != nil %>
  <%= t("administrate.filter.actions") %>:
  <% page.show_page_actions.each do |key, value| %>
    <%= link_to( "#{t("administrate.actions.new")} #{t(value['model'])}", {:controller => 'admin/'+ value['link'],:action => "new", value['parameter_name'] => page.attributes[value['position_field']]}, {class: "button new button_#{page.attributes[value['position_field']]}"}, ) if valid_action? :new %>
  <% end %>
<% end %>

<section class="main-content__body">
  <dl>
    <% page.attributes.each do |attribute| %>
      <dt class="attribute-label" id="<%= attribute.name %>">
      <%= t( "helpers.label.#{resource_name}.#{attribute.name}", default: attribute.name.titleize) %>
      </dt>
      <dd class="attribute-data attribute-data--<%=attribute.html_class%>">
        <%#= render_field attribute %>
        <%= render_field attribute if attribute.html_class != 'boolean'  %>
        <%= t("#{attribute.html_class}.#{attribute}_", default: attribute) if attribute.html_class == 'boolean' %></dd>
    <% end %>
  </dl>
</section>

<% if (defined? @table0) && (not @table0.empty?) %>
  <%= render("show_tables", table: @table0, page: page) %>
<% end %>

<% if (defined? @table1) && (not @table1.empty?) %>
  <%= render("show_tables", table: @table1, page: page) %>
<% end %>

<% if (defined? @table2) && (not @table2.empty?) %>
  <%= render("show_tables", table: @table2, page: page) %>
<% end %>

<% if (defined? @table3) && (not @table3.empty?) %>
  <%= render("show_tables", table: @table3, page: page) %>
<% end %>

<% if (defined? @table4) && (not @table4.empty?) %>
  <%= render("show_tables", table: @table4, page: page) %>
<% end %>

<% if (defined? @table5) && (not @table5.empty?) %>
  <%= render("show_tables", table: @table5, page: page) %>
<% end %>

<% if (defined? @table6) && (not @table6.empty?) %>
  <%= render("show_tables", table: @table6, page: page) %>
<% end %>